{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAIlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAuB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCC9BjBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACPC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAMC,IAAMf,EAAMgB,IAAMN,IACxB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAc,IAAD,EAEblB,mBAC1B,CACIyB,KAAM,GACNa,SAAS,IAL0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAuBvC,OAfAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAIEqB,EDpB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,0CAAd,SAA0DhB,IAEzDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAI,SAAAC,GAAG,OAEN,cAAC,EAAD,eACKA,GADcA,EAAIC,aE2BxCgB,EAzCM,WAAM,MAGa7C,mBAAS,CAAC,oBAHvB,mBAGhB8C,EAHgB,KAGJ/C,EAHI,KAgBvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ+C,EAAWnB,KAAI,SAAAT,GAAQ,OAEf,cAAC,EAAD,CAEIA,SAAWA,GADLA,YC3BtC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5f4f7374.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ hanldeSubmit }>\r\n            <input \r\n            type=\"text\" \r\n            value={ inputValue } \r\n            onChange={ handleInputChange }/>\r\n        </form>\r\n\r\n    )   \r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","   \r\n    export const getGifs = async( category ) => {\r\n\r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=YpsKS4lmzYeknwoiwkcQL7RXqeXgo2Se`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        \r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__jackInTheBox\">\r\n            <img  src={ url } alt={ title }></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__jackInTheBox\">{ category }</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__Flash\">Loading</p>}\r\n\r\n            {<div className=\"card-grid\">\r\n                    {\r\n                        images.map(img =>\r\n                            (                      \r\n                                <GifGridItem key={ img.id } \r\n                                { ...img }\r\n                                />\r\n                            ))\r\n                    }\r\n                \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState(\r\n    {           \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            })\r\n\r\n    }, [ category ])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Jujutsu Kaisen', 'Hentai']\r\n    const [categories, setCategories] = useState(['Attack on Titan']);\r\n    // const handleAdd = () =>{\r\n    //     //Agrega un elemento al ultimo de la lista con el spread(...)\r\n    //     // setCategories( [...categories, 'Attack on Titan']);\r\n    //     //Agrega un elemento al inicio de la lista con el spread(...)\r\n    //     // setCategories( ['Attack on Titan', ...categories]);\r\n\r\n    //     //Otra forma de hacerlo es mediante un callback\r\n    //     setCategories(cats => [...cats, 'Attack On Titan'])\r\n    // }\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        (\r\n                            <GifGrid \r\n                                key={ category }\r\n                                category={ category }\r\n                            />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp  from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}